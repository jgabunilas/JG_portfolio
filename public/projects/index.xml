<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Jason Gabunilas</title>
    <link>https://jgabunilas.github.io/JG_portfolio/projects/</link>
    <description>Recent content in Projects on Jason Gabunilas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 11 Apr 2017 11:13:32 -0400</lastBuildDate>
    <atom:link href="https://jgabunilas.github.io/JG_portfolio/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Weather and Vacation API</title>
      <link>https://jgabunilas.github.io/JG_portfolio/projects/project-3-vacation/</link>
      <pubDate>Tue, 11 Apr 2017 11:13:32 -0400</pubDate>
      <guid>https://jgabunilas.github.io/JG_portfolio/projects/project-3-vacation/</guid>
      <description>Project Summary This exercise analyzes various properties of local weather as a function of location, seeking to understand whether temperature, cloudiness, windiness, or humidity for a given city is correlated with its latitudinal positioning. It makes extensive use of the following tools:&#xA;Pandas - data cleanup and organization Matplotlib - data visualization Scipy - regression analysis Requests - API requests Part I: WeatherPy In the first part of this analysis, weather data retrieved from the OpenWeather API is organized to determine whether a city&amp;rsquo;s latitudinal position may be related to various properties of the weather.</description>
    </item>
    <item>
      <title>Chapter II: Pierre Gringoire</title>
      <link>https://jgabunilas.github.io/JG_portfolio/projects/chapter-2/</link>
      <pubDate>Mon, 10 Apr 2017 11:00:59 -0400</pubDate>
      <guid>https://jgabunilas.github.io/JG_portfolio/projects/chapter-2/</guid>
      <description>Nevertheless, as be harangued them, the satisfaction and admiration unanimously excited by his costume were dissipated by his words; and when he reached that untoward conclusion: “As soon as his illustrious eminence, the cardinal, arrives, we will begin,” his voice was drowned in a thunder of hooting.&#xA;“Begin instantly! The mystery! the mystery immediately!” shrieked the people. And above all the voices, that of Johannes de Molendino was audible, piercing the uproar like the fife’s derisive serenade: “Commence instantly!</description>
    </item>
    <item>
      <title>Ski Resort Explorer</title>
      <link>https://jgabunilas.github.io/JG_portfolio/projects/project-1-resorts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://jgabunilas.github.io/JG_portfolio/projects/project-1-resorts/</guid>
      <description>View this project on GitHub&#xD;Project Summary The goal of this project was to construct a simulated ski resort explorer application that enables the user to perform the following tasks:&#xA;Identify ski resorts around the world that fit the user&amp;rsquo;s preferences Select ski resorts within a selected country and rank them according to a desired metric This application was constructed as the final project from the Python Data Visualization: Dashboards with Plotly &amp;amp; Dash&#xD;course from Udemy.</description>
    </item>
    <item>
      <title>The Monty Hall Problem</title>
      <link>https://jgabunilas.github.io/JG_portfolio/projects/project-2-monty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://jgabunilas.github.io/JG_portfolio/projects/project-2-monty/</guid>
      <description>View this project on GitHub&#xD;Introduction The Monty Hall problem is a classic problem in probability theory. Modeled as a game of chance and named after the eponymous game show host Monty Hall&#xD;, it has sparked debate, discussion, and discourse between academics and laypeople alike.&#xA;This simple exercise is a Python implementation of the Monty Hall problem with two primary features:&#xA;A functional implementation which allows the user to play through the game A simulator that runs through a chosen number of iterations of the game and sisplays the outcomes based on the parameters selected by the user.</description>
    </item>
  </channel>
</rss>
